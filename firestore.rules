/**
 * @fileoverview Firestore Security Rules for the Werkself Hub application.
 *
 * Core Philosophy:
 * This ruleset is configured for rapid prototyping.  All data is publicly readable and writable.  
 *
 * Data Structure:
 * - /news_articles/{newsArticleId}: Collection of news articles.
 * - /matches/{matchId}: Collection of match data.
 * - /players/{playerId}: Collection of player data.
 * - /highlight_reels/{highlightReelId}: Collection of AI-generated highlight reels.
 * - /users/{userId}: Collection of user documents.
 * - /users/{userId}/forum_posts/{postId}: Subcollection of forum posts for each user.
 *
 * Key Security Decisions:
 * - All data is publicly accessible (get, list).
 * - Any user can create, update, and delete any document in any collection.
 *
 * Denormalization for Authorization:
 * - The highlight_reels collection denormalizes the matchId to remove authorization dependencies on match data.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read or write news articles.
     * @path /news_articles/{newsArticleId}
     * @allow (get, list) Any user can read any news article.
     * @allow (create, update, delete) Any user can create, update, or delete any news article.
     * @deny (none) This rule allows all operations.
     * @principle Allows public read and write access to news articles.
     */
    match /news_articles/{newsArticleId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to read or write match data.
     * @path /matches/{matchId}
     * @allow (get, list) Any user can read any match data.
     * @allow (create, update, delete) Any user can create, update, or delete any match data.
     * @deny (none) This rule allows all operations.
     * @principle Allows public read and write access to match data.
     */
    match /matches/{matchId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to read or write player data.
     * @path /players/{playerId}
     * @allow (get, list) Any user can read any player data.
     * @allow (create, update, delete) Any user can create, update, or delete any player data.
     * @deny (none) This rule allows all operations.
     * @principle Allows public read and write access to player data.
     */
    match /players/{playerId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to read or write highlight reels.
     * @path /highlight_reels/{highlightReelId}
     * @allow (get, list) Any user can read any highlight reel.
     * @allow (create, update, delete) Any user can create, update, or delete any highlight reel.
     * @deny (none) This rule allows all operations.
     * @principle Allows public read and write access to highlight reels.
     */
    match /highlight_reels/{highlightReelId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to read or write user documents.
     * @path /users/{userId}
     * @allow (get, list) Any user can read any user document.
     * @allow (create, update, delete) Any user can create, update, or delete any user document.
     * @deny (none) This rule allows all operations.
     * @principle Allows public read and write access to user documents.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows anyone to read or write forum posts for any user.
     * @path /users/{userId}/forum_posts/{postId}
     * @allow (get, list) Any user can read any forum post.
     * @allow (create, update, delete) Any user can create, update, or delete any forum post.
     * @deny (none) This rule allows all operations.
     * @principle Allows public read and write access to forum posts.
     */
    match /users/{userId}/forum_posts/{postId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}