/**
 * @file Firestore Security Rules for Werkself Hub
 * @core_philosophy This ruleset grants all access to all users, effectively disabling any security restrictions.
 * It is intended for prototyping and development purposes ONLY.
 * @data_structure The data is organized into top-level collections for global data (news, matches, players, teams, team categories),
 * a user-scoped subcollection for forum posts, and a user collection for user-specific data.
 * @key_security_decisions All reads and writes are allowed for all users. This is NOT a production-ready configuration.
 * In the future, enable fine-grained authorization.
 * @authorization_independence The original structure was designed for authorization independence, but those rules are disabled in this file.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any user to read and write news articles.
     * @path /news_articles/{newsArticleId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
    match /news_articles/{newsArticleId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write match data.
     * @path /matches/{matchId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
    match /matches/{matchId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write player data.
     * @path /players/{playerId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
    match /players/{playerId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write highlight reel data.
     * @path /highlight_reels/{highlightReelId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
    match /highlight_reels/{highlightReelId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write forum posts for any user.
     * @path /users/{userId}/forum_posts/{postId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
    match /users/{userId}/forum_posts/{postId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write any user's profile data.
     * @path /users/{userId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write team category data.
     * @path /team_categories/{categoryId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
    match /team_categories/{categoryId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows any user to read and write team data.
     * @path /teams/{teamId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
    match /teams/{teamId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

        /**
     * @description Allows any user to read and write member data.
     * @path /members/{memberId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
     match /members/{memberId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

            /**
     * @description Allows any user to read and write group member data.
     * @path /group_members/{memberId}
     * @allow (get, list, create, update, delete) - Any user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Open access for all users during prototyping.
     */
    match /group_members/{memberId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}