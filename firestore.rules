/**
 * @file Firestore Security Rules for Werkself Hub
 * @Core Philosophy: This ruleset prioritizes ease of use by allowing any authenticated user to read and write to any part of the database.
 *
 * @Data Structure: The database is organized into several top-level collections:
 *   - /news_articles/{newsArticleId}: News articles related to Bayer Leverkusen.
 *   - /matches/{matchId}: Data for Bayer Leverkusen matches.
 *   - /players/{playerId}: Information about Bayer Leverkusen players.
 *   - /highlight_reels/{highlightReelId}: AI-generated match highlights.
 *   - /users/{userId}: User profiles, secured using path-based authorization.
 *   - /users/{userId}/forum_posts/{postId}: Forum posts created by individual users.
 *
 * @Key Security Decisions:
 *   - All read and write operations are allowed for authenticated users.
 *   - List operations are enabled, which may expose data to unauthorized users.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any authenticated user to read or write news articles.
     * @path /news_articles/{newsArticleId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /news_articles/{newsArticleId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read or write match data.
     * @path /matches/{matchId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /matches/{matchId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read or write player data.
     * @path /players/{playerId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /players/{playerId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read or write highlight reel data.
     * @path /highlight_reels/{highlightReelId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /highlight_reels/{highlightReelId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read or write forum posts under their own user ID.
     * @path /users/{userId}/forum_posts/{postId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /users/{userId}/forum_posts/{postId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read or write user data.
     * @path /users/{userId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /users/{userId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read or write team category data.
     * @path /team_categories/{categoryId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /team_categories/{categoryId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read or write team data.
     * @path /teams/{teamId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /teams/{teamId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read or write member data.
     * @path /members/{memberId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /members/{memberId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read or write group member data.
     * @path /group_members/{memberId}
     * @allow (get, list, create, update, delete) - Any signed-in user can perform any operation.
     * @deny (none) - No requests are denied.
     * @principle Allows all operations for authenticated users.
     */
    match /group_members/{memberId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}